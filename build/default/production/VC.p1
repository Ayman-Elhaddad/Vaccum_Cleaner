Version 4.0 HI-TECH Software Intermediate Code
"18 VC.c
[; ;VC.c: 18: static tVC_SPEED TargetSpeed;
[c E852 0 1 2 .. ]
[n E852 . LOW_SPEED MID_SPEED HIGH_SPEED  ]
"40
[; ;VC.c: 40:     for(Index = SW_PLUS ; Index < (3) ; Index ++ )
[c E860 0 1 2 .. ]
[n E860 . SW_PLUS SW_MINUS SW_PRESSURE  ]
"47
[; ;VC.c: 47:                     if(SW_GetState(SW_PLUS) == SW_PRE_RELEASED)
[c E865 0 1 2 3 .. ]
[n E865 . SW_RELEASED SW_PRE_PRESSED SW_PRESSED SW_PRE_RELEASED  ]
"25 ./SW.h
[; ;./SW.h: 25: tSW_State SW_GetState(tSW sw);
[v _SW_GetState `(E865 ~T0 @X0 0 ef1`E860 ]
"216 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 216: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"5 ./Main.h
[p x FOSC = XT ]
"6
[p x WDTE = OFF ]
"7
[p x PWRTE = OFF ]
"8
[p x BOREN = OFF ]
"9
[p x LVP = OFF ]
"10
[p x CPD = OFF ]
"11
[p x WRT = OFF ]
"12
[p x CP = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"18 VC.c
[; ;VC.c: 18: static tVC_SPEED TargetSpeed;
[v _TargetSpeed `E852 ~T0 @X0 1 s ]
"20
[; ;VC.c: 20: void VC_Init(void)
[v _VC_Init `(v ~T0 @X0 1 ef ]
"21
[; ;VC.c: 21: {
{
[e :U _VC_Init ]
[f ]
"23
[; ;VC.c: 23:     TargetSpeed = MID_SPEED;
[e = _TargetSpeed . `E852 1 ]
"26
[; ;VC.c: 26: }
[e :UE 95 ]
}
"27
[; ;VC.c: 27: void VC_Update(void)
[v _VC_Update `(v ~T0 @X0 1 ef ]
"28
[; ;VC.c: 28: {
{
[e :U _VC_Update ]
[f ]
"29
[; ;VC.c: 29:     static tWord VC_counter = 0;
[v F878 `ui ~T0 @X0 1 s VC_counter ]
[i F878
-> -> 0 `i `ui
]
"30
[; ;VC.c: 30:     tByte Index;
[v _Index `uc ~T0 @X0 1 a ]
"32
[; ;VC.c: 32:     VC_counter += (5);
[e =+ F878 -> -> 5 `i `ui ]
"34
[; ;VC.c: 34:     if(VC_counter != (20))
[e $ ! != F878 -> -> 20 `i `ui 97  ]
"35
[; ;VC.c: 35:     {
{
"36
[; ;VC.c: 36:         return;
[e $UE 96  ]
"38
[; ;VC.c: 38:     }
}
[e :U 97 ]
"39
[; ;VC.c: 39:     VC_counter = 0;
[e = F878 -> -> 0 `i `ui ]
"40
[; ;VC.c: 40:     for(Index = SW_PLUS ; Index < (3) ; Index ++ )
{
[e = _Index -> . `E860 0 `uc ]
[e $ < -> _Index `i -> 3 `i 98  ]
[e $U 99  ]
[e :U 98 ]
"41
[; ;VC.c: 41:     {
{
"44
[; ;VC.c: 44:             switch(Index)
[e $U 102  ]
"45
[; ;VC.c: 45:             {
{
"46
[; ;VC.c: 46:                 case SW_PLUS :
[e :U 103 ]
"47
[; ;VC.c: 47:                     if(SW_GetState(SW_PLUS) == SW_PRE_RELEASED)
[e $ ! == -> ( _SW_GetState (1 . `E860 0 `ui -> . `E865 3 `ui 104  ]
"48
[; ;VC.c: 48:                     {
{
"49
[; ;VC.c: 49:                          if( TargetSpeed == HIGH_SPEED)
[e $ ! == -> _TargetSpeed `ui -> . `E852 2 `ui 105  ]
"50
[; ;VC.c: 50:                          {
{
"51
[; ;VC.c: 51:                             continue;
[e $U 100  ]
"52
[; ;VC.c: 52:                          }
}
[e :U 105 ]
"54
[; ;VC.c: 54:                               TargetSpeed ++;
[e ++ _TargetSpeed -> -> 1 `i `E852 ]
"55
[; ;VC.c: 55:                     }
}
[e :U 104 ]
"56
[; ;VC.c: 56:                     break;
[e $U 101  ]
"57
[; ;VC.c: 57:                 case SW_MINUS :
[e :U 106 ]
"58
[; ;VC.c: 58:                     if(SW_GetState(SW_MINUS) == SW_PRE_RELEASED)
[e $ ! == -> ( _SW_GetState (1 . `E860 1 `ui -> . `E865 3 `ui 107  ]
"59
[; ;VC.c: 59:                     {
{
"60
[; ;VC.c: 60:                         if( TargetSpeed == LOW_SPEED)
[e $ ! == -> _TargetSpeed `ui -> . `E852 0 `ui 108  ]
"61
[; ;VC.c: 61:                         {
{
"62
[; ;VC.c: 62:                             continue;
[e $U 100  ]
"63
[; ;VC.c: 63:                         }
}
[e :U 108 ]
"64
[; ;VC.c: 64:                              TargetSpeed --;
[e -- _TargetSpeed -> -> 1 `i `E852 ]
"65
[; ;VC.c: 65:                     }
}
[e :U 107 ]
"66
[; ;VC.c: 66:                     break;
[e $U 101  ]
"67
[; ;VC.c: 67:                 case SW_PRESSURE :
[e :U 109 ]
"68
[; ;VC.c: 68:                     if(SW_GetState(SW_PRESSURE) == SW_PRE_RELEASED)
[e $ ! == -> ( _SW_GetState (1 . `E860 2 `ui -> . `E865 3 `ui 110  ]
"69
[; ;VC.c: 69:                     {
{
"70
[; ;VC.c: 70:                          ((((PORTB))) = (((PORTB)) & (~(1 << ((3)))))|(0 << ((3))));
[e = _PORTB -> | & -> _PORTB `i ~ << -> 1 `i -> 3 `i << -> 0 `i -> 3 `i `uc ]
"71
[; ;VC.c: 71:                     }
}
[e :U 110 ]
"72
[; ;VC.c: 72:                     break;
[e $U 101  ]
"73
[; ;VC.c: 73:                 default:
[e :U 111 ]
"75
[; ;VC.c: 75:                     break;
[e $U 101  ]
"77
[; ;VC.c: 77:             }
}
[e $U 101  ]
[e :U 102 ]
[e [\ -> _Index `i , $ . `E860 0 103
 , $ . `E860 1 106
 , $ . `E860 2 109
 111 ]
[e :U 101 ]
"80
[; ;VC.c: 80:         if(SW_GetState(SW_PRESSURE) == SW_PRESSED)
[e $ ! == -> ( _SW_GetState (1 . `E860 2 `ui -> . `E865 2 `ui 112  ]
"81
[; ;VC.c: 81:         {
{
"82
[; ;VC.c: 82:             ((((PORTB))) = (((PORTB)) & (~(1 << ((3)))))|(1 << ((3))));
[e = _PORTB -> | & -> _PORTB `i ~ << -> 1 `i -> 3 `i << -> 1 `i -> 3 `i `uc ]
"84
[; ;VC.c: 84:            static tWord PRESSURE_counter = 0;
[v F880 `ui ~T0 @X0 1 s PRESSURE_counter ]
[i F880
-> -> 0 `i `ui
]
"86
[; ;VC.c: 86:             PRESSURE_counter += (20);
[e =+ F880 -> -> 20 `i `ui ]
"87
[; ;VC.c: 87:             if( PRESSURE_counter != (3000) )
[e $ ! != F880 -> -> 3000 `i `ui 113  ]
"88
[; ;VC.c: 88:             {
{
"89
[; ;VC.c: 89:                 return ;
[e $UE 96  ]
"90
[; ;VC.c: 90:             }
}
[e :U 113 ]
"91
[; ;VC.c: 91:             PRESSURE_counter = 0;
[e = F880 -> -> 0 `i `ui ]
"93
[; ;VC.c: 93:             if( TargetSpeed == LOW_SPEED)
[e $ ! == -> _TargetSpeed `ui -> . `E852 0 `ui 114  ]
"94
[; ;VC.c: 94:                     {
{
"95
[; ;VC.c: 95:                        return;
[e $UE 96  ]
"96
[; ;VC.c: 96:                     }
}
[e :U 114 ]
"98
[; ;VC.c: 98:                     TargetSpeed --;
[e -- _TargetSpeed -> -> 1 `i `E852 ]
"100
[; ;VC.c: 100:         }
}
[e :U 112 ]
"102
[; ;VC.c: 102: }
}
[e :U 100 ]
[e ++ _Index -> -> 1 `i `uc ]
[e $ < -> _Index `i -> 3 `i 98  ]
[e :U 99 ]
}
"117
[; ;VC.c: 117: }
[e :UE 96 ]
}
"118
[; ;VC.c: 118: tVC_SPEED VC_GetSpeed(void)
[v _VC_GetSpeed `(E852 ~T0 @X0 1 ef ]
"119
[; ;VC.c: 119: {
{
[e :U _VC_GetSpeed ]
[f ]
"121
[; ;VC.c: 121:     return TargetSpeed;
[e ) _TargetSpeed ]
[e $UE 115  ]
"122
[; ;VC.c: 122: }
[e :UE 115 ]
}
